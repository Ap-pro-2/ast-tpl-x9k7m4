---

import { formatDate, getAllPosts, getSiteSettings, getCategoriesWithPostCounts } from "../core/blogLogic";
import { getEntry, getCollection } from "astro:content";
import OptimizedImage from "../components/ui/OptimizedImage.astro";
import BaseLayout from "./BaseLayout.astro";
import Breadcrumb from "../components/navigation/Breadcrumb.astro";
import { generateBreadcrumbs } from "../core/navigation/breadcrumbUtils";
import RelatedPosts from "../components/ui/RelatedPosts.astro";
import { Schema } from "../core/seo";
import HorizontalAuthorCard from "../components/ui/HorizontalAuthorCard.astro";
import TableOfContents from "../components/ui/TableOfContents.astro";
import SimpleBannerAd from "../components/ads/SimpleBannerAd.astro";
import ShareArticle from "../components/ui/ShareArticle.astro";
import { getBadgeStyleString } from "../core/utils/colorUtils";
import { getPostUrl } from "../core/urlRouting";

const { frontmatter, schemaData, headings } = Astro.props;


let author = null;
let category = null;

try {
  if (frontmatter.author) {
    const authorId =
      typeof frontmatter.author === "string"
        ? frontmatter.author
        : frontmatter.author.id;
    author = await getEntry("authors", authorId);
  }
  if (frontmatter.category) {
    const categoryId =
      typeof frontmatter.category === "string"
        ? frontmatter.category
        : frontmatter.category.id;
    category = await getEntry("categories", categoryId);
  }
} catch (error) {
  
}

const formattedDate = formatDate(frontmatter.pubDate);
const slug = Astro.url.pathname.split('/').filter(Boolean).pop() || '';


const pageData = {
  title: frontmatter.title,
  category: category
    ? { id: category.id, name: category.data.name, slug: category.data.slug }
    : undefined,
};
const breadcrumbs = generateBreadcrumbs(`/${frontmatter.title}`, pageData);


const allPosts = await getAllPosts();
const settings = await getSiteSettings();
const categories = await getCategoriesWithPostCounts();
const allCategories = await getCollection('categories');


const recentPosts = allPosts
  .filter(post => post.id !== frontmatter.title)
  .slice(0, 4);

// Generate URLs for recent posts
const recentPostUrls = await Promise.all(recentPosts.map(post => getPostUrl(post.id)));




let tagData: any[] = [];
if (
  frontmatter.tags &&
  Array.isArray(frontmatter.tags) &&
  frontmatter.tags.length > 0
) {
  try {
    tagData = await Promise.all(
      frontmatter.tags.map(async (tagId: any) => {
        try {
          const tag = await getEntry("tags", tagId);
          return tag || { id: tagId, data: { name: tagId } };
        } catch (error) {
          return { id: tagId, data: { name: tagId } };
        }
      }),
    );
  } catch (error) {
    tagData = [];
  }
}
---

<BaseLayout
  pageTitle={frontmatter.title}
  description={frontmatter.description}
  isArticle={true}
  ogImage={frontmatter.image?.url}
  ogImageAlt={frontmatter.image?.alt || frontmatter.title}
>
  {schemaData && <Schema item={schemaData} slot="head" />}

  <!-- Video Content SEO Enhancement -->
  <meta property="og:type" content="article" slot="head" />
  <meta
    property="article:author"
    content={author?.data.name || "Author"}
    slot="head"
  />
  <meta
    property="article:published_time"
    content={frontmatter.pubDate.toISOString()}
    slot="head"
  />
  {
    frontmatter.tags && (
      <meta
        property="article:tag"
        content={frontmatter.tags.join(", ")}
        slot="head"
      />
    )
  }

  <!-- Enhanced meta for video content -->
  <meta name="twitter:card" content="summary_large_image" slot="head" />
  <meta name="twitter:title" content={frontmatter.title} slot="head" />
  <meta
    name="twitter:description"
    content={frontmatter.description}
    slot="head"
  />
  {
    frontmatter.image?.url && (
      <meta name="twitter:image" content={frontmatter.image.url} slot="head" />
    )
  }

  <!-- Preload critical featured image for LCP optimization -->
  {
    frontmatter.image?.url && (
      <link
        rel="preload"
        as="image"
        href={frontmatter.image.url}
        fetchpriority="high"
        slot="head"
      />
    )
  }
  <!-- Post Layout with Sidebar -->
  <div class="py-6 sm:py-8 lg:py-12 xl:py-16" style="background: var(--bg-primary)">
    <div class="container max-w-7xl px-4 sm:px-6 lg:px-8">
      
      <!-- Two Column Layout with Social Sidebar -->
      <div class="post-layout-container">
        
        <!-- Social Share Sidebar - Left Edge (Desktop Only) -->
        <div class="share-sidebar hidden xl:block">
          <ShareArticle 
            title={frontmatter.title}
            url={slug}
            description={frontmatter.description}
            isVertical={true}
          />
        </div>
        
        <div class="post-layout-grid">
          <!-- Main Content Column -->
          <main class="post-main-content">
        <article
          class="theme-card overflow-hidden"
          style="transition: all var(--animation-duration) var(--animation-easing);"
        >
          <!-- Article Header -->
          <div class="p-4 sm:p-6 lg:p-8 xl:p-12 pb-4 sm:pb-6 lg:pb-8">
            <!-- Breadcrumb - Hidden on mobile -->
            <div class="hidden sm:block mb-4 sm:mb-6">
              <Breadcrumb items={breadcrumbs} />
            </div>

            <!-- Category Badge -->
            {
              category && (
                <div class="mb-4 sm:mb-6">
                  <a
                    href={`/categories/${category.data.slug || category.id}`}
                    class="category-badge-accessible inline-flex items-center px-3 py-1.5 sm:px-4 sm:py-2 text-xs sm:text-sm font-semibold uppercase tracking-wider"
                  >
                    {category.data.name}
                  </a>
                </div>
              )
            }

            <!-- Article Title -->
            <h1
              class="text-2xl sm:text-3xl lg:text-4xl xl:text-5xl font-bold mb-6 sm:mb-8 leading-tight"
              style="color: var(--text-primary); font-family: var(--font-heading)"
            >
              {frontmatter.title}
            </h1>

            <!-- Article Meta - Clean Single Line Layout -->
            <div class="flex flex-wrap items-center gap-4 text-sm mb-4">
              <!-- Author Name -->
              {
                author && (
                  <a
                    href={`/authors/${author.data.slug}`}
                    class="font-semibold hover:underline transition-colors"
                    style="color: var(--text-primary);"
                    title={`View all posts by ${author.data.name}`}
                  >
                    {author.data.name}
                  </a>
                )
              }

              <!-- Separator -->
              {
                author && (
                  <div
                    class="w-1 h-1 rounded-full"
                    style="background: var(--text-muted);"
                  />
                )
              }

              <!-- Date -->
              <div
                class="flex items-center gap-2"
                style="color: var(--text-secondary);"
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                  ></path>
                </svg>
                <time datetime={frontmatter.pubDate.toISOString()}>
                  {formattedDate}
                </time>
              </div>

              <!-- Separator -->
              <div
                class="w-1 h-1 rounded-full"
                style="background: var(--text-muted);"
              >
              </div>

              <!-- Read Time -->
              <div
                class="flex items-center gap-2"
                style="color: var(--text-secondary);"
              >
                <svg
                  class="w-4 h-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <span class="font-medium">5 min read</span>
              </div>
            </div>
          </div>

          <!-- Featured Image -->
          {
            frontmatter.image?.url && settings.blogSettings?.showFeaturedImageInArticle === true && (
              <div class="px-4 sm:px-6 lg:px-8 xl:px-12 mb-6 sm:mb-8">
                <div
                  class="aspect-[16/9] sm:aspect-[2/1] lg:aspect-[16/9] overflow-hidden"
                  style="border-radius: var(--radius-lg); box-shadow: var(--shadow-md)"
                >
                  <OptimizedImage
                    src={frontmatter.image.url}
                    alt={frontmatter.image.alt || frontmatter.title}
                    width={830}
                    height={467}
                    priority={true}
                    format="webp"
                    quality={85}
                    class="w-full h-full object-cover transition-transform duration-700 hover:scale-105"
                  />
                </div>
              </div>
            )
          }

          <!-- Table of Contents -->
          {
            headings && headings.length > 0 && (
              <div class="px-4 sm:px-6 lg:px-8 xl:px-12 mb-8">
                <TableOfContents headings={headings} />
              </div>
            )
          }

          <!-- Article Content -->
          <div class="px-4 sm:px-6 lg:px-8 xl:px-12 pb-6 sm:pb-8 lg:pb-12">
            <div
              class="prose max-w-none video-content-optimized"
              id="blog-content"
            >
              <slot />
            </div>

            <!-- Tags -->
            {
              tagData.length > 0 && (
                <div
                  class="mt-12 pt-8 text-center"
                  style="border-top: 1px solid var(--border-light)"
                >
                  <div class="flex items-center justify-center gap-3 mb-4">
                    <svg
                      class="w-5 h-5"
                      style="color: var(--color-primary)"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"
                      />
                    </svg>
                    <h3
                      class="text-lg font-bold"
                      style="color: var(--text-primary); font-family: var(--font-heading)"
                    >
                      Tags
                    </h3>
                  </div>
                  <div class="flex flex-wrap justify-center gap-3">
                    {tagData.map((tag) => (
                      <a
                        href={`/tags/${tag.data.slug || tag.id}`}
                        class="category-badge-accessible inline-flex items-center px-4 py-2 text-sm font-medium"
                      >
                        #{tag.data.name}
                      </a>
                    ))}
                  </div>
                </div>
              )
            }

          </div>
        </article>

        <!-- Share Article Component - Mobile Only -->
        <div class="mt-8 xl:hidden">
          <ShareArticle 
            title={frontmatter.title}
            url={slug}
            description={frontmatter.description}
          />
        </div>

        <!-- Horizontal Author Card -->
        {
          author && (
            <div class="mt-12">
              <HorizontalAuthorCard authorId={author.id} />
            </div>
          )
        }

        <!-- After Content Ad -->
        <div class="mt-8 mb-8">
          <SimpleBannerAd 
            placement="article-content"
            className="article-content-ad"
          />
        </div>

        <!-- Related Posts -->
        <div class="mt-12">
          <RelatedPosts
            currentPostId={frontmatter.title}
            category={frontmatter.category}
            tags={frontmatter.tags}
            limit={3}
          />
        </div>
        </main>

        <!-- Sidebar Column -->
        <aside class="post-sidebar">

          <!-- Sidebar Ad Unit - Top Position -->
          <div class="post-sidebar-section">
            <SimpleBannerAd 
              placement="article-sidebar"
              className="post-sidebar-ad-top"
            />
          </div>


          <!-- Recent News Section -->
          <div class="post-sidebar-section">
            <div class="post-section-header">
              <div class="post-section-line"></div>
              <h3 class="post-section-title">Recent News</h3>
            </div>
            <div class="post-recent-posts">
              {recentPosts.map((post, index) => (
                <article class="post-recent-item">
                  <a href={recentPostUrls[index]} class="post-recent-link">
                    <div class="post-recent-image">
                      {post.data.image?.url ? (
                        <OptimizedImage 
                          src={post.data.image.url} 
                          alt={post.data.image.alt || post.data.title}
                          width={80}
                          height={80}
                          class="w-full h-full object-cover"
                        />
                      ) : (
                        <div class="post-recent-placeholder"></div>
                      )}
                    </div>
                    <div class="post-recent-content">
                      <h4 class="post-recent-title">{post.data.title}</h4>
                      <div class="post-recent-date">{formatDate(post.data.pubDate)}</div>
                    </div>
                  </a>
                </article>
              ))}
            </div>
          </div>

        </aside>
        </div>
      </div>
    </div>
  </div>

  <!-- Social Share Sidebar Styles -->
  <style>
    
    .post-layout-container {
      display: flex;
      gap: 2rem;
      align-items: flex-start;
    }

    
    .share-sidebar {
      position: sticky;
      top: 8rem;
      z-index: 100;
      height: fit-content;
      flex-shrink: 0;
      margin-left: -2rem;
      transition: opacity 0.4s ease, transform 0.4s ease;
      opacity: 1;
      transform: translateX(0);
    }

    .share-sidebar.hidden {
      opacity: 0;
      transform: translateX(-20px);
      pointer-events: none;
    }

    
    @media (min-width: 1200px) {
      .share-sidebar {
        margin-left: -2rem;
      }
    }

    @media (min-width: 1400px) {
      .share-sidebar {
        margin-left: -3rem;
      }
    }

    @media (min-width: 1600px) {
      .share-sidebar {
        margin-left: -4rem;
      }
    }

    
    @media (max-width: 1199px) {
      .share-sidebar {
        display: none;
      }
      
      .post-layout-container {
        display: block;
      }
    }

    
    .video-content-optimized {
      
      --tw-prose-body: var(--text-primary);
      --tw-prose-headings: var(--text-primary);
    }

    .video-content-optimized .youtube-embed-container {
      
      margin: 2rem 0;
      max-width: 100%;
    }

    
    @media (max-width: 768px) {
      .video-content-optimized .youtube-embed-container {
        margin: 1.5rem 0;
        border-radius: var(--radius-md);
      }
    }

    
    .video-content-optimized h2 {
      margin-top: 3rem;
      margin-bottom: 1.5rem;
      font-size: 1.875rem;
      font-weight: 700;
      line-height: 1.2;
      color: var(--text-primary);
    }

    .video-content-optimized h3 {
      margin-top: 2.5rem;
      margin-bottom: 1rem;
      font-size: 1.5rem;
      font-weight: 600;
      color: var(--text-primary);
    }

    
    .video-content-optimized .youtube-embed-container + h2,
    .video-content-optimized .youtube-embed-container + h3 {
      margin-top: 3rem;
    }

    .video-content-optimized p + .youtube-embed-container {
      margin-top: 2rem;
    }

    
    .video-content-optimized ul li input[type="checkbox"] {
      margin-right: 0.5rem;
      accent-color: var(--color-primary);
    }

    .video-content-optimized ul li:has(input[type="checkbox"]) {
      list-style: none;
      margin-left: -1.5rem;
      padding-left: 1.5rem;
    }
  </style>

  <!-- SEO-Optimized External Link Handler & YouTube Auto-Embed -->
  <!-- SEO-Optimized External Link Handler -->
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const currentDomain = window.location.hostname;
      const blogContent = document.getElementById("blog-content");
      if (!blogContent) return;

      
      const links = blogContent.querySelectorAll("a[href]");

      links.forEach((link) => {
        const href = link.getAttribute("href");
        if (!href || href.startsWith("#")) return;

        try {
          const url = new URL(href, window.location.origin);
          const isExternal = url.hostname !== currentDomain;

          if (isExternal) {
            link.setAttribute("target", "_blank");
            link.setAttribute("rel", "noopener noreferrer nofollow");

            if (!link.querySelector(".external-link-icon")) {
              const icon = document.createElement("span");
              icon.className = "external-link-icon";
              icon.innerHTML =
                ' <svg style="display: inline; width: 12px; height: 12px; margin-left: 2px; opacity: 0.7;" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path></svg>';
              link.appendChild(icon);
            }

            const currentTitle = link.getAttribute("title") || "";
            link.setAttribute(
              "title",
              currentTitle + (currentTitle ? " " : "") + "(Opens in new tab)",
            );
          }
        } catch (e) {
          
        }
      });
    });
  </script>

  <!-- Social Sidebar Boundary Control -->
  <script src="../scripts/social-sidebar.ts"></script>

</BaseLayout>
cial Sidebar Boundary Control -->
  <script src="../scripts/social-sidebar.ts"></script>

</BaseLayout>
cial Sidebar Boundary Control -->
  <script src="../scripts/social-sidebar.ts"></script>

</BaseLayout>
