---


import { getAllPosts } from '../../core/blogLogic';
import RelatedPostCard from './RelatedPostCard.astro';

interface Props {
  currentPostId: string;
  category?: string;
  tags?: string[];
  limit?: number;
}

const { currentPostId, category, tags = [], limit = 3 } = Astro.props;


const allPosts = await getAllPosts();


const otherPosts = allPosts.filter(post => post.id !== currentPostId);


const relatedPosts = otherPosts
  .map(post => {
    let score = 0;
    
    
    if (category && post.data.category) {
      const postCategoryId = typeof post.data.category === 'string' ? post.data.category : post.data.category.id;
      if (postCategoryId === category) {
        score += 10;
      }
    }
    
    
    if (tags.length > 0 && post.data.tags) {
      const postTags = Array.isArray(post.data.tags) ? post.data.tags : [];
      const postTagIds = postTags.map(tag => typeof tag === 'string' ? tag : tag.id);
      const matchingTags = postTagIds.filter(tagId => tags.includes(tagId));
      score += matchingTags.length * 5;
    }
    
    
    const daysSincePublished = (Date.now() - post.data.pubDate.getTime()) / (1000 * 60 * 60 * 24);
    if (daysSincePublished < 30) {
      score += 2;
    }
    
    return { post, score };
  })
  .filter(item => item.score > 0) 
  .sort((a, b) => b.score - a.score) 
  .slice(0, limit) 
  .map(item => item.post);


if (relatedPosts.length < limit) {
  const recentPosts = otherPosts
    .filter(post => !relatedPosts.includes(post))
    .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime())
    .slice(0, limit - relatedPosts.length);
  
  relatedPosts.push(...recentPosts);
}
---

{relatedPosts.length > 0 && (
  <section class="related-articles-section">
    
    <div class="related-articles-container">
      
      <div class="section-header">
        <div class="header-content">
          <div class="header-icon">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"></path>
            </svg>
          </div>
          <div>
            <h2 class="section-title">Related Articles</h2>
            <p class="section-subtitle">Continue exploring these topics</p>
          </div>
        </div>
      </div>
      
      <div class="articles-grid">
        {relatedPosts.map((post) => (
          <RelatedPostCard post={post} />
        ))}
      </div>
      
      <div class="section-footer">
        <a href="/blog" class="view-more-button" aria-label="Explore more blog articles">
          <span>Explore More Articles</span>
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </a>
      </div>
      
    </div>
  </section>
)}

<style>
  
  .related-articles-section {
    margin-top: 3rem;
    margin-bottom: 2rem;
  }
  
  
  .related-articles-container {
    background: var(--surface-card);
    border: 1px solid var(--border-default);
    border-radius: var(--radius-xl);
    box-shadow: var(--shadow-sm);
    padding: 2rem;
    transition: all var(--animation-duration) var(--animation-easing);
  }
  
  .related-articles-container:hover {
    box-shadow: var(--shadow-md);
  }
  
  
  .section-header {
    margin-bottom: 2rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid var(--border-light);
  }
  
  .header-content {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  
  .header-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 3rem;
    height: 3rem;
    background: color-mix(in srgb, var(--color-primary-accessible) 10%, var(--surface-card));
    color: var(--color-primary-accessible);
    border-radius: var(--radius-lg);
    border: 1px solid color-mix(in srgb, var(--color-primary-accessible) 20%, transparent);
  }
  
  .section-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--text-primary);
    font-family: var(--font-heading);
    margin: 0 0 0.25rem 0;
    line-height: 1.3;
  }
  
  .section-subtitle {
    font-size: 0.875rem;
    color: var(--text-secondary);
    margin: 0;
    line-height: 1.4;
  }
  
  
  .articles-grid {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }
  
  
  .section-footer {
    margin-top: 2rem;
    padding-top: 1.5rem;
    border-top: 1px solid var(--border-light);
    text-align: center;
  }
  
  
  .view-more-button {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    font-weight: 600;
    font-size: 0.875rem;
    background: var(--bg-secondary);
    color: var(--text-secondary);
    border: 1px solid var(--border-default);
    border-radius: var(--radius-lg);
    text-decoration: none;
    transition: all var(--animation-duration) var(--animation-easing);
  }
  
  .view-more-button:hover {
    background: color-mix(in srgb, var(--color-primary-accessible) 5%, var(--bg-secondary));
    border-color: var(--color-primary-accessible);
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
    color: var(--text-primary);
  }
  
  .view-more-button svg {
    transition: transform var(--animation-duration) var(--animation-easing);
  }
  
  .view-more-button:hover svg {
    transform: translateX(2px);
  }
  
  
  @media (max-width: 768px) {
    .related-articles-container {
      padding: 1.5rem;
    }
    
    .header-content {
      flex-direction: column;
      text-align: center;
      gap: 0.75rem;
    }
    
    .header-icon {
      width: 2.5rem;
      height: 2.5rem;
    }
    
    .section-title {
      font-size: 1.25rem;
    }
    
    .articles-grid {
      gap: 1.25rem;
    }
    
    .view-more-button {
      padding: 0.625rem 1.25rem;
      font-size: 0.8125rem;
    }
  }
  
  @media (max-width: 480px) {
    .related-articles-container {
      padding: 1.25rem;
    }
    
    .section-header {
      margin-bottom: 1.5rem;
      padding-bottom: 1.25rem;
    }
    
    .section-footer {
      margin-top: 1.5rem;
      padding-top: 1.25rem;
    }
  }
</style>