---
/**
 * Clean Horizontal Blog Card - Theme System Integrated
 * Professional UI/UX using only your theme system
 */

import { formatDate } from '../../core/blogLogic';
import { getEntry } from 'astro:content';
import OptimizedImage from './OptimizedImage.astro';

interface Props {
  post: any;
}

const { post } = Astro.props;

// Get category data safely
let category = null;

try {
  if (post.data.category) {
    const categoryId = typeof post.data.category === 'string' ? post.data.category : post.data.category.id;
    category = await getEntry('categories', categoryId);
  }
} catch (error) {
  console.warn('Could not load category:', error);
}

// Handle tags properly - they can be strings or objects
const tags = post.data.tags || [];
const tagNames = tags.map((tag: any) => {
  if (typeof tag === 'string') return tag;
  if (tag?.id) return tag.id;
  if (tag?.data?.name) return tag.data.name;
  return null;
}).filter(Boolean);
---

<!-- Clean Horizontal Blog Card - Theme System -->
<article class="horizontal-blog-card theme-card overflow-hidden group">
  
  <div class="flex flex-col md:flex-row">
    
    <!-- Post Image -->
    {post.data.image?.url && (
      <div class="relative md:w-2/5 flex-shrink-0">
        <div class="aspect-[16/9] md:aspect-[4/3] overflow-hidden">
          <OptimizedImage 
            src={post.data.image.url} 
            alt={post.data.image.alt || post.data.title}
            width={400}
            height={300}
            loading="lazy"
            class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
          />
        </div>
        
        <!-- Category Badge on Image -->
        {category && (
          <div class="absolute top-4 left-4">
            <a href={`/categories/${category.data.slug}`}
               class="theme-badge font-bold text-xs px-3 py-1 hover:opacity-80 transition-opacity"
               aria-label={`View all posts in ${category.data.name} category`}>
              {category.data.name}
            </a>
          </div>
        )}
      </div>
    )}
    
    <!-- Post Content -->
    <div class="flex-1 p-4 flex flex-col">
      
      <!-- Category (if no image) & Meta Info -->
      <div class="flex flex-wrap items-center gap-2 mb-3 text-sm">
        {!post.data.image?.url && category && (
          <>
            <a href={`/categories/${category.data.slug}`}
               class="theme-badge font-semibold text-xs px-2 py-1 hover:opacity-80 transition-opacity"
               aria-label={`View all posts in ${category.data.name} category`}>
              {category.data.name}
            </a>
            <span class="w-1 h-1 rounded-full theme-text-muted"></span>
          </>
        )}
        <time datetime={post.data.pubDate.toISOString()} class="theme-date">
          {formatDate(post.data.pubDate)}
        </time>
        <span class="w-1 h-1 rounded-full theme-text-muted"></span>
        <span class="theme-reading-time">5 min read</span>
      </div>
      
      <!-- Title -->
      <h3 class="text-lg md:text-xl font-bold leading-tight mb-3 line-clamp-2" 
          style="color: var(--text-primary); font-family: var(--font-heading);">
        <a href={`/blog/${post.id}`} 
           class="hover:opacity-80 transition-opacity duration-300"
           style="color: inherit;"
           aria-label={`Read full article: ${post.data.title}`}>
          {post.data.title}
        </a>
      </h3>
      
      <!-- Description -->
      {post.data.description && (
        <p class="text-sm leading-relaxed mb-4 line-clamp-2 flex-grow" 
           style="color: var(--text-secondary);">
          {post.data.description}
        </p>
      )}
      
      <!-- Tags -->
      {tagNames.length > 0 && (
        <div class="flex flex-wrap gap-1 mb-4">
          {tagNames.slice(0, 2).map((tag: string) => (
            <a href={`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}
               class="text-xs px-2 py-1 font-medium rounded-full hover:opacity-80 transition-opacity" 
               style="color: var(--color-primary); background: color-mix(in srgb, var(--color-primary) 10%, transparent);"
               aria-label={`View all posts tagged with ${tag}`}>
              #{tag}
            </a>
          ))}
          {tagNames.length > 2 && (
            <a href="/tags"
               class="text-xs px-2 py-1 font-medium rounded-full hover:opacity-80 transition-opacity" 
               style="color: var(--text-muted); background: var(--bg-tertiary);"
               aria-label={`View all tags - ${tagNames.length - 2} more tags available`}>
              +{tagNames.length - 2}
            </a>
          )}
        </div>
      )}
      
      <!-- CTA Button - Theme System -->
      <div class="mt-auto">
        <a href={`/blog/${post.id}`} 
           class="theme-button-primary inline-flex items-center gap-2 px-4 py-2 text-sm font-semibold transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
          <span>Read Article</span>
          <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </a>
      </div>
    </div>
  </div>
</article>

<style>
  /* Line clamping */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* Horizontal blog card styling */
  .horizontal-blog-card {
    transition: all var(--animation-duration) var(--animation-easing);
  }
  
  .horizontal-blog-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.12);
  }
  
  /* Ensure proper flex layout */
  .horizontal-blog-card .flex-col {
    min-height: 100%;
  }
  
  /* Mobile optimizations */
  @media (max-width: 768px) {
    .horizontal-blog-card .flex-col {
      gap: 1rem;
    }
    
    .horizontal-blog-card .theme-button-primary {
      padding: 0.5rem 1rem;
      font-size: 0.875rem;
    }
  }
</style>