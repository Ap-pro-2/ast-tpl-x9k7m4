---
import { getFormById } from '../../core/formsLogic';

export interface Props {
  className?: string;
}

const { className = '' } = Astro.props;

// Get form data from forms.json
const formData = await getFormById('contact-us');

// If form is disabled or not found, don't render
if (!formData) {
  return;
}

const { title, description, buttonText } = formData.data;

---

<div class={`contact-form-wrapper ${className}`}>
  <!-- Error Message -->
  <div id="contact-form-error-message" class="theme-contact-form-error" style="display: none;">
    Something went wrong. Please try again.
  </div>
  
  <!-- Success Message -->
  <div id="contact-form-success-message" class="theme-contact-form-success" style="display: none;">
    Thank you! Your message has been sent successfully.
  </div>

  <!-- Contact Form -->
  <div class="modern-contact-form-container">
    <form id="contact-form" class="modern-contact-form">
      <!-- Name Field -->
      <div class="modern-form-field">
        <label class="modern-form-label" for="contact-form-name">
          Name
        </label>
        <input
          type="text"
          id="contact-form-name"
          name="name"
          placeholder="Your Name"
          required
          class="modern-form-input"
        />
        <p id="contact-form-name-error" class="modern-form-field-error" style="display: none;"></p>
      </div>

      <!-- Email Field -->
      <div class="modern-form-field">
        <label class="modern-form-label" for="contact-form-email">
          Email
        </label>
        <input
          type="email"
          id="contact-form-email"
          name="email"
          placeholder="Your Email"
          required
          class="modern-form-input"
        />
        <p id="contact-form-email-error" class="modern-form-field-error" style="display: none;"></p>
      </div>

      <!-- Message Field -->
      <div class="modern-form-field">
        <label class="modern-form-label" for="contact-form-message">
          Message
        </label>
        <textarea
          id="contact-form-message"
          name="message"
          placeholder="Your Message"
          required
          class="modern-form-input modern-form-textarea"
          rows="6"
        ></textarea>
        <p id="contact-form-message-error" class="modern-form-field-error" style="display: none;"></p>
      </div>

      <!-- Terms & Conditions Checkbox -->
      <div class="modern-form-field terms-field">
        <label class="terms-checkbox-wrapper">
          <input
            type="checkbox"
            id="contact-form-terms"
            name="terms"
            required
            class="terms-checkbox"
          />
          <span class="terms-text">
            I agree to the <a href="/legal/privacy" target="_blank" class="terms-link">terms & conditions</a>
          </span>
        </label>
        <p id="contact-form-terms-error" class="modern-form-field-error" style="display: none;"></p>
      </div>
      
      <button type="submit" class="modern-form-submit" id="contact-form-submit-btn" disabled>
        {buttonText}
      </button>
      
      <!-- Hidden field for source tracking -->
      <input type="hidden" name="source" value="contact-page-contact-us" />
    </form>
  </div>
</div>

<script>
  import { actions } from 'astro:actions';

  function initializeContactForm() {
    const formElement = document.getElementById('contact-form') as HTMLFormElement;
    if (!formElement || formElement.hasAttribute('data-initialized')) return;
    
    formElement.setAttribute('data-initialized', 'true');
    
    const submitBtn = document.getElementById('contact-form-submit-btn') as HTMLButtonElement;
    const nameError = document.getElementById('contact-form-name-error') as HTMLElement;
    const emailError = document.getElementById('contact-form-email-error') as HTMLElement;
    const messageError = document.getElementById('contact-form-message-error') as HTMLElement;
    const termsError = document.getElementById('contact-form-terms-error') as HTMLElement;
    const termsCheckbox = document.getElementById('contact-form-terms') as HTMLInputElement;
    const errorMessage = document.getElementById('contact-form-error-message') as HTMLElement;
    const successMessage = document.getElementById('contact-form-success-message') as HTMLElement;

    function hideMessages() {
      if (errorMessage) errorMessage.style.display = 'none';
      if (successMessage) successMessage.style.display = 'none';
      if (nameError) nameError.style.display = 'none';
      if (emailError) emailError.style.display = 'none';
      if (messageError) messageError.style.display = 'none';
      if (termsError) termsError.style.display = 'none';
    }

    function toggleSubmitButton() {
      if (submitBtn && termsCheckbox) {
        submitBtn.disabled = !termsCheckbox.checked;
      }
    }

    // Enable/disable submit button based on terms checkbox
    if (termsCheckbox) {
      termsCheckbox.addEventListener('change', toggleSubmitButton);
    }

    function setLoading(loading: boolean) {
      if (submitBtn) {
        const originalText = submitBtn.dataset.originalText || submitBtn.textContent;
        if (!submitBtn.dataset.originalText) {
          submitBtn.dataset.originalText = originalText || '';
        }
        submitBtn.textContent = loading ? 'Sending...' : originalText;
        submitBtn.disabled = loading;
      }
    }

    formElement.addEventListener('submit', async (event) => {
      event.preventDefault();
      hideMessages();
      setLoading(true);

      try {
        const formData = new FormData(formElement);
        const { data, error } = await actions.leads(formData);
        setLoading(false);

        if (error) {
          if (error.code === 'BAD_REQUEST' && (error as any).fields) {
            const fields = (error as any).fields;
            if (fields.name && nameError) {
              nameError.textContent = fields.name.join(', ');
              nameError.style.display = 'block';
            }
            if (fields.email && emailError) {
              emailError.textContent = fields.email.join(', ');
              emailError.style.display = 'block';
            }
            if (fields.message && messageError) {
              messageError.textContent = fields.message.join(', ');
              messageError.style.display = 'block';
            }
          } else {
            if (errorMessage) errorMessage.style.display = 'block';
          }
        } else {
          if (successMessage) {
            successMessage.style.display = 'block';
            successMessage.style.visibility = 'visible';
            formElement.reset();
          }
          
          setTimeout(() => {
            if (successMessage) successMessage.style.display = 'none';
          }, 5000);
        }
      } catch (err) {
        setLoading(false);
        if (errorMessage) errorMessage.style.display = 'block';
      }
    });
  }

  // Initialize on page load
  document.addEventListener('astro:page-load', initializeContactForm);
  
  // Initialize immediately if already loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeContactForm);
  } else {
    initializeContactForm();
  }
</script>

<style>
  /* Modern Contact Form Styling */
  .modern-contact-form-container {
    background: var(--surface-card, #ffffff);
    border-radius: var(--radius-xl, 16px);
    padding: 2.5rem;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    border: 1px solid var(--border-light, #e5e7eb);
  }

  .modern-contact-form {
    width: 100%;
  }

  .modern-form-field {
    margin-bottom: 1.75rem;
  }

  .modern-form-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--text-primary, #111827);
    margin-bottom: 0.5rem;
    font-family: var(--font-heading, system-ui);
  }

  .modern-form-input {
    width: 100%;
    padding: 0.875rem 1rem;
    border: 1px solid var(--border-default, #d1d5db);
    border-radius: var(--radius-md, 8px);
    background: var(--bg-primary, #ffffff);
    color: var(--text-primary, #111827);
    font-size: 1rem;
    line-height: 1.5;
    transition: all 0.2s ease-in-out;
    font-family: var(--font-body, system-ui);
  }

  .modern-form-input:focus {
    outline: none;
    border-color: var(--color-primary-accessible, #3b82f6);
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
    transform: translateY(-1px);
  }

  .modern-form-input:hover {
    border-color: var(--color-primary-accessible-light, #60a5fa);
  }

  .modern-form-input::placeholder {
    color: var(--text-muted, #9ca3af);
    font-weight: 400;
  }

  .modern-form-textarea {
    resize: vertical;
    min-height: 120px;
  }

  .modern-form-submit {
    width: 100%;
    padding: 1rem 2rem;
    background: var(--color-primary-accessible, #8b5a3c);
    color: white;
    font-weight: 600;
    font-size: 1rem;
    border: none;
    border-radius: var(--radius-md, 8px);
    cursor: pointer;
    transition: all 0.2s ease-in-out;
    font-family: var(--font-heading, system-ui);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-top: 1rem;
  }

  .modern-form-submit:hover {
    background: var(--color-primary-accessible-dark, #7c4a2f);
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(139, 90, 60, 0.4);
  }

  .modern-form-submit:active {
    transform: translateY(0);
    box-shadow: 0 2px 8px rgba(139, 90, 60, 0.3);
  }

  .modern-form-submit:disabled {
    background: var(--text-muted, #9ca3af);
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  .modern-form-field-error {
    color: #dc2626;
    font-size: 0.875rem;
    font-weight: 500;
    margin: 0.5rem 0 0 0;
    padding-left: 0.25rem;
  }

  /* Error and Success Messages */
  .contact-form-wrapper .theme-contact-form-error,
  .contact-form-wrapper .theme-contact-form-success {
    padding: 1rem;
    border-radius: var(--radius-md, 8px);
    margin-bottom: 1.5rem;
    font-weight: 500;
    text-align: center;
  }

  .contact-form-wrapper .theme-contact-form-error {
    background: #fef2f2;
    color: #dc2626;
    border: 1px solid #fecaca;
  }

  .contact-form-wrapper .theme-contact-form-success {
    background: #f0fdf4;
    color: #16a34a;
    border: 1px solid #bbf7d0;
  }

  /* Mobile responsiveness */
  @media (max-width: 768px) {
    .modern-contact-form-container {
      padding: 2rem;
      margin: 0 -1rem;
      border-radius: 0;
    }
    
    .modern-form-field {
      margin-bottom: 1.5rem;
    }
    
    .modern-form-input,
    .modern-form-submit {
      font-size: 1rem;
    }
  }

  @media (max-width: 640px) {
    .modern-contact-form-container {
      padding: 1.5rem;
    }
    
    .modern-form-input {
      padding: 0.75rem 0.875rem;
    }
    
    .modern-form-submit {
      padding: 0.875rem 1.5rem;
      font-size: 0.9375rem;
    }
  }
</style>