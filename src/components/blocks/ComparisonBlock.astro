---

import { getEntry } from "astro:content";
import ComparisonTable from "../ComparisonTable.astro";

export interface Props {
  id: string;
}

const { id } = Astro.props;


const comparison = await getEntry("affiliateComparisons", id);

if (!comparison || !comparison.data.active) {
  return null;
}


const productPromises = comparison.data.products.map(async (productRef) => {
  
  const productId = typeof productRef === 'string' ? productRef : productRef.id;
  const product = await getEntry("affiliateProducts", productId);
  if (!product) return null;

  return {
    title: product.data.title,
    price: product.data.price,
    originalPrice: product.data.originalPrice,
    image: product.data.image,
    imageAlt: product.data.imageAlt,
    affiliateUrl: product.data.affiliateUrl,
    rating: product.data.rating,
    reviewCount: product.data.reviewCount,
    badge: product.data.badge,
    features: product.data.features || [],
    pros: product.data.pros || [],
    cons: product.data.cons || [],
    buttonText: product.data.buttonText,
  };
});

const products = await Promise.all(productPromises);


const validProducts = products.filter(
  (product): product is NonNullable<typeof product> => product !== null,
);

if (validProducts.length === 0) {
  return null;
}
---

<ComparisonTable title={comparison.data.title} products={validProducts} />
