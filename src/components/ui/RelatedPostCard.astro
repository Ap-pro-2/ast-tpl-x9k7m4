---


import { formatDate } from '../../core/blogLogic';
import { getEntry } from 'astro:content';
import OptimizedImage from './OptimizedImage.astro';
import { getBadgeStyleString } from '../../core/utils/colorUtils';
import { getPostUrl } from '../../core/urlRouting';

interface Props {
  post: any;
}

const { post } = Astro.props;

// Generate URL for this post
const postUrl = await getPostUrl(post.id);


let author = null;
let category = null;

try {
  if (post.data.author) {
    const authorId = typeof post.data.author === 'string' ? post.data.author : post.data.author.id;
    author = await getEntry('authors', authorId);
  }
  if (post.data.category) {
    const categoryId = typeof post.data.category === 'string' ? post.data.category : post.data.category.id;
    category = await getEntry('categories', categoryId);
  }
} catch (error) {
}
---

<article class="related-post-card">
  <a href={postUrl} class="card-link">
    
    <div class="card-container">
      
      {post.data.image?.url && (
        <div class="image-container">
          <OptimizedImage 
            src={post.data.image.url} 
            alt={post.data.image.alt || post.data.title}
            width={300}
            height={200}
            loading="lazy"
            class="post-image"
          />
          
          {category && (
            <div class="category-badge-overlay">
              <span class="px-2 py-1 text-xs font-semibold rounded-md uppercase tracking-wide" style={getBadgeStyleString(category.data.color)}>
                {category.data.name}
              </span>
            </div>
          )}
        </div>
      )}
      
      <div class="content-container">
        
        {!post.data.image?.url && category && (
          <div class="mb-3">
            <span class="px-2 py-1 text-xs font-semibold rounded-md uppercase tracking-wide" style={getBadgeStyleString(category.data.color)}>
              {category.data.name}
            </span>
          </div>
        )}
        
        <h3 class="post-title">
          {post.data.title}
        </h3>
        
        {post.data.description && (
          <p class="post-description">
            {post.data.description}
          </p>
        )}
        
        <div class="meta-container">
          <div class="meta-info">
            {author && (
              <>
                <span class="author-name">{author.data.name}</span>
                <span class="separator">â€¢</span>
              </>
            )}
            <time datetime={post.data.pubDate.toISOString()} class="post-date">
              {formatDate(post.data.pubDate)}
            </time>
          </div>
          
          <div class="read-arrow">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
            </svg>
          </div>
        </div>
      </div>
    </div>
  </a>
</article>

<style>
  
  .related-post-card {
    transition: all var(--animation-duration) var(--animation-easing);
  }
  
  
  .card-link {
    display: block;
    text-decoration: none;
    color: inherit;
  }
  
  
  .card-container {
    display: flex;
    flex-direction: column;
    background: var(--bg-secondary);
    border: 1px solid var(--border-light);
    border-radius: var(--radius-lg);
    overflow: hidden;
    transition: all var(--animation-duration) var(--animation-easing);
  }
  
  .card-container:hover {
    border-color: color-mix(in srgb, var(--color-primary-accessible) 30%, var(--border-light));
    box-shadow: var(--shadow-md);
    transform: translateY(-2px);
  }
  
  
  .image-container {
    position: relative;
    width: 100%;
    aspect-ratio: 16/9;
    overflow: hidden;
  }
  
  .post-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform var(--animation-duration) var(--animation-easing);
  }
  
  .card-container:hover .post-image {
    transform: scale(1.05);
  }
  
  
  .category-badge-overlay {
    position: absolute;
    top: 0.75rem;
    left: 0.75rem;
  }
  
  
  
  .content-container {
    padding: 1.5rem;
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  
  .post-title {
    font-size: 1.125rem;
    font-weight: 700;
    color: var(--text-primary);
    font-family: var(--font-heading);
    line-height: 1.4;
    margin: 0 0 0.75rem 0;
    transition: color var(--animation-duration) var(--animation-easing);
  }
  
  .card-container:hover .post-title {
    color: var(--color-primary-accessible);
  }
  
  
  .post-description {
    font-size: 0.875rem;
    color: var(--text-secondary);
    line-height: 1.5;
    margin: 0 0 1rem 0;
    flex: 1;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  
  .meta-container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-top: auto;
  }
  
  
  .meta-info {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.8125rem;
    color: var(--text-muted);
  }
  
  .author-name {
    font-weight: 500;
    color: var(--text-secondary);
  }
  
  .separator {
    opacity: 0.6;
  }
  
  .post-date {
    color: var(--text-muted);
  }
  
  
  .read-arrow {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 2rem;
    height: 2rem;
    background: color-mix(in srgb, var(--color-primary-accessible) 8%, transparent);
    color: var(--color-primary-accessible);
    border-radius: var(--radius-md);
    transition: all var(--animation-duration) var(--animation-easing);
  }
  
  .card-container:hover .read-arrow {
    background: var(--color-primary-accessible);
    color: var(--bg-primary);
    transform: translateX(2px);
  }
  
  
  @media (min-width: 768px) {
    .card-container {
      flex-direction: row;
    }
    
    .image-container {
      width: 12rem;
      flex-shrink: 0;
      aspect-ratio: 4/3;
    }
    
    .content-container {
      padding: 1.25rem 1.5rem;
    }
    
    .post-title {
      font-size: 1rem;
      margin-bottom: 0.5rem;
    }
    
    .post-description {
      font-size: 0.8125rem;
      margin-bottom: 0.75rem;
    }
  }
  
  
  @media (max-width: 480px) {
    .content-container {
      padding: 1.25rem;
    }
    
    .post-title {
      font-size: 1rem;
    }
    
    .meta-info {
      font-size: 0.75rem;
    }
    
    .read-arrow {
      width: 1.75rem;
      height: 1.75rem;
    }
  }
</style>